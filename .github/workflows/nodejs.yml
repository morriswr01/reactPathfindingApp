name: Node.js CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  # Setting an environment variable with the value of a configuration variable
  env_var: ${{ vars.ENV_CONTEXT_VAR }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci

  # display-variables:
  #   name: ${{ vars.JOB_NAME }}
  #   # You can use configuration variables with the `vars` context for dynamic jobs
  #   if: ${{ vars.USE_VARIABLES == 'true' }}
  #   runs-on: ${{ vars.RUNNER }}
  #   environment: dev
  #   steps:
  #   - name: Use variables
  #     run: |
  #       echo "repository variable : $REPOSITORY_VAR"
  #       echo "organization variable : $ORGANIZATION_VAR"
  #       echo "overridden variable : $OVERRIDE_VAR"
  #       echo "variable from shell environment : $env_var"
  #     env:
  #       REPOSITORY_VAR: ${{ vars.REPOSITORY_VAR }}
  #       ORGANIZATION_VAR: ${{ vars.ORGANIZATION_VAR }}
  #       OVERRIDE_VAR: ${{ vars.OVERRIDE_VAR }}
        
  #   - name: ${{ vars.HELLO_WORLD_STEP }}
  #     if: ${{ vars.HELLO_WORLD_ENABLED == 'true' }}
  #     uses: actions/hello-world-javascript-action@main
  #     with:
  #       who-to-greet: ${{ vars.GREET_NAME }}

  print-env:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Print environment variables
        env:
          AWS_ACCESS_KEY_ID_NOT_REALLY: ${{ vars.AWS_ACCESS_KEY_ID_NOT_REALLY }}
          AWS_SECRET_ACCESS_KEY_ID_NOT_REALLY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID_NOT_REALLY }}
        run: |
          echo "Access Key ID: $"
          echo "Access Key ID: $AWS_ACCESS_KEY_ID_NOT_REALLY"
          echo "Secret Key: $AWS_SECRET_ACCESS_KEY_ID_NOT_REALLY" 